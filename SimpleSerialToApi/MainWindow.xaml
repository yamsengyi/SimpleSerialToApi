<Window x:Class="SimpleSerialToApi.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:SimpleSerialToApi.Converters"
        xmlns:vm="clr-namespace:SimpleSerialToApi.ViewModels"
        mc:Ignorable="d"
        Title="SimpleSerialToApi - WPF Interface" 
        Height="800" Width="1200"
        MinHeight="600" MinWidth="800">
    
    <Window.Resources>
        <converters:StatusToColorConverter x:Key="StatusToColorConverter" />
        <converters:ApplicationStateToColorConverter x:Key="ApplicationStateToColorConverter" />
        <converters:BooleanToColorConverter x:Key="BooleanToColorConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:LogLevelToColorConverter x:Key="LogLevelToColorConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        
        <Style x:Key="StatusIndicatorStyle" TargetType="Ellipse">
            <Setter Property="Width" Value="12"/>
            <Setter Property="Height" Value="12"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>
        
        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,10,0,5"/>
        </Style>
        
        <Style x:Key="MetricLabelStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Menu bar -->
            <RowDefinition Height="*"/>    <!-- Main content -->
            <RowDefinition Height="250"/>  <!-- Log panel -->
            <RowDefinition Height="Auto"/> <!-- Status bar -->
        </Grid.RowDefinitions>
        
        <!-- Menu and Toolbar -->
        <DockPanel Grid.Row="0">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_Settings" Command="{Binding OpenSettingsCommand}"/>
                    <Separator/>
                    <MenuItem Header="_Exit"/>
                </MenuItem>
                <MenuItem Header="_View">
                    <MenuItem Header="_Refresh Status"/>
                    <MenuItem Header="_Clear Logs" Command="{Binding ClearLogsCommand}"/>
                </MenuItem>
                <MenuItem Header="_Tools">
                    <MenuItem Header="_Test Serial Connection"/>
                    <MenuItem Header="_Test API Connection"/>
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="_About"/>
                </MenuItem>
            </Menu>
            
            <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
                <Button Command="{Binding StartApplicationCommand}" 
                        IsEnabled="{Binding IsApplicationRunning, Converter={StaticResource InverseBooleanConverter}}"
                        ToolTip="Start Application">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="▶" FontSize="16" Margin="0,0,3,0"/>
                        <TextBlock Text="Start"/>
                    </StackPanel>
                </Button>
                <Button Command="{Binding StopApplicationCommand}" 
                        IsEnabled="{Binding IsApplicationRunning}"
                        ToolTip="Stop Application">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="⏹" FontSize="16" Margin="0,0,3,0"/>
                        <TextBlock Text="Stop"/>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button Command="{Binding Settings.RefreshComPortsCommand}" ToolTip="Refresh COM Ports">
                    <TextBlock Text="🔄" FontSize="14"/>
                </Button>
            </ToolBar>
        </DockPanel>
        
        <!-- Main Content - Tab Control -->
        <TabControl Grid.Row="1" Margin="5">
            
            <!-- Dashboard Tab -->
            <TabItem Header="Dashboard">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <!-- Application Status -->
                        <GroupBox Header="Application Status" Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,0,10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                                    <Ellipse Style="{StaticResource StatusIndicatorStyle}"
                                             Fill="{Binding ApplicationState, Converter={StaticResource ApplicationStateToColorConverter}}"/>
                                    <TextBlock Text="{Binding ApplicationStatus}" FontSize="14" FontWeight="SemiBold"/>
                                </StackPanel>
                                
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <Button Command="{Binding StartApplicationCommand}" 
                                            IsEnabled="{Binding IsApplicationRunning, Converter={StaticResource InverseBooleanConverter}}"
                                            Content="Start" Margin="0,0,5,0" Padding="10,5"/>
                                    <Button Command="{Binding StopApplicationCommand}" 
                                            IsEnabled="{Binding IsApplicationRunning}"
                                            Content="Stop" Padding="10,5"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                        
                        <!-- Serial Status Panel -->
                        <GroupBox Header="Serial Communication" Grid.Row="1" Grid.Column="0" Margin="0,0,5,10">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Status:" Style="{StaticResource MetricLabelStyle}"/>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                                        <Ellipse Style="{StaticResource StatusIndicatorStyle}"
                                                 Fill="{Binding SerialStatus.ConnectionStatus, Converter={StaticResource StatusToColorConverter}}"/>
                                        <TextBlock Text="{Binding SerialStatus.StatusMessage}"/>
                                    </StackPanel>
                                    
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Port:" Style="{StaticResource MetricLabelStyle}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SerialStatus.PortName}"/>
                                    
                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Baud Rate:" Style="{StaticResource MetricLabelStyle}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding SerialStatus.BaudRate}"/>
                                    
                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Messages:" Style="{StaticResource MetricLabelStyle}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding SerialStatus.TotalMessagesReceived}"/>
                                </Grid>
                                
                                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                    <Button Command="{Binding SerialStatus.ConnectCommand}" Content="Connect" Margin="0,0,5,0"/>
                                    <Button Command="{Binding SerialStatus.DisconnectCommand}" Content="Disconnect" Margin="0,0,5,0"/>
                                    <Button Command="{Binding SerialStatus.SendTestCommand}" Content="Send Test"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                        
                        <!-- API Status Panel -->
                        <GroupBox Header="API Status" Grid.Row="1" Grid.Column="1" Margin="5,0,0,10">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Status:" Style="{StaticResource MetricLabelStyle}"/>
                                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                                        <Ellipse Style="{StaticResource StatusIndicatorStyle}"
                                                 Fill="{Binding ApiStatus.OverallStatus, Converter={StaticResource StatusToColorConverter}}"/>
                                        <TextBlock Text="{Binding ApiStatus.StatusMessage}"/>
                                    </StackPanel>
                                    
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Success Rate:" Style="{StaticResource MetricLabelStyle}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ApiStatus.SuccessRate, StringFormat={}{0:F1}%}"/>
                                    
                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Total Calls:" Style="{StaticResource MetricLabelStyle}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ApiStatus.TotalCalls}"/>
                                    
                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Avg Response:" Style="{StaticResource MetricLabelStyle}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding ApiStatus.AverageResponseTime, StringFormat={}{0:F0}ms}"/>
                                </Grid>
                                
                                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                                    <Button Command="{Binding ApiStatus.TestAllConnectionsCommand}" Content="Test All" Margin="0,0,5,0"/>
                                    <Button Command="{Binding ApiStatus.RefreshStatusCommand}" Content="Refresh"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>
                        
                        <!-- Statistics and Queue Status -->
                        <GroupBox Header="Queue & Statistics" Grid.Row="2" Grid.ColumnSpan="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Queue Status -->
                                <StackPanel Grid.Column="0" Margin="0,0,10,0">
                                    <TextBlock Text="Message Queue" Style="{StaticResource SectionHeaderStyle}"/>
                                    
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Current Size:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding QueueStatus.CurrentQueueSize}"/>
                                        
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Utilization:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding QueueStatus.QueueUtilizationPercentage, StringFormat={}{0:F1}%}"/>
                                        
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Health:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding QueueStatus.QueueHealth}"/>
                                        
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Processing:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding QueueStatus.IsProcessing, Converter={StaticResource InverseBooleanConverter}}"/>
                                    </Grid>
                                    
                                    <ProgressBar Value="{Binding QueueStatus.QueueUtilizationPercentage}" Maximum="100" Height="10" Margin="0,5"/>
                                    
                                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                        <Button Command="{Binding QueueStatus.StartProcessingCommand}" Content="Start" Margin="0,0,3,0" Padding="5"/>
                                        <Button Command="{Binding QueueStatus.StopProcessingCommand}" Content="Stop" Margin="0,0,3,0" Padding="5"/>
                                        <Button Command="{Binding QueueStatus.ClearQueueCommand}" Content="Clear" Padding="5"/>
                                    </StackPanel>
                                </StackPanel>
                                
                                <!-- Processing Statistics -->
                                <StackPanel Grid.Column="1" Margin="5,0">
                                    <TextBlock Text="Processing Statistics" Style="{StaticResource SectionHeaderStyle}"/>
                                    
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Processed:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding QueueStatus.TotalProcessed}"/>
                                        
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Errors:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding QueueStatus.TotalErrors}"/>
                                        
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Success Rate:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding QueueStatus.SuccessRate, StringFormat={}{0:F1}%}"/>
                                        
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Rate:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding QueueStatus.ProcessingRate, StringFormat={}{0:F1}/min}"/>
                                    </Grid>
                                </StackPanel>
                                
                                <!-- Real-time Metrics -->
                                <StackPanel Grid.Column="2" Margin="10,0,0,0">
                                    <TextBlock Text="Real-time Metrics" Style="{StaticResource SectionHeaderStyle}"/>
                                    
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        
                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Last Activity:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SerialStatus.LastDataReceived, StringFormat={}{0:HH:mm:ss}}"/>
                                        
                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Queue Processed:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding QueueStatus.LastProcessed, StringFormat={}{0:HH:mm:ss}}"/>
                                        
                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Retries:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding QueueStatus.RetryCount}"/>
                                        
                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Uptime:" Style="{StaticResource MetricLabelStyle}"/>
                                        <TextBlock Grid.Row="3" Grid.Column="1" Text="--:--:--"/>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </ScrollViewer>
            </TabItem>
            
            <!-- Settings Tab -->
            <TabItem Header="Settings">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="10">
                        <!-- Serial Settings -->
                        <GroupBox Header="Serial Port Settings" Margin="0,0,0,10">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="COM Port:" VerticalAlignment="Center" Margin="0,5"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding Settings.AvailableComPorts}" 
                                          SelectedItem="{Binding Settings.SelectedComPort}" Margin="5"/>
                                <Button Grid.Row="0" Grid.Column="2" Command="{Binding Settings.RefreshComPortsCommand}" 
                                        Content="Refresh" Margin="5"/>
                                
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Baud Rate:" VerticalAlignment="Center" Margin="0,5"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Settings.BaudRates}" 
                                          SelectedItem="{Binding Settings.BaudRate}" Margin="5"/>
                                
                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Parity:" VerticalAlignment="Center" Margin="0,5"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Settings.ParityOptions}" 
                                          SelectedItem="{Binding Settings.Parity}" Margin="5"/>
                                
                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Data Bits:" VerticalAlignment="Center" Margin="0,5"/>
                                <ComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Settings.DataBitsOptions}" 
                                          SelectedItem="{Binding Settings.DataBits}" Margin="5"/>
                                
                                <TextBlock Grid.Row="4" Grid.Column="0" Text="Stop Bits:" VerticalAlignment="Center" Margin="0,5"/>
                                <ComboBox Grid.Row="4" Grid.Column="1" ItemsSource="{Binding Settings.StopBitsOptions}" 
                                          SelectedItem="{Binding Settings.StopBits}" Margin="5"/>
                                
                                <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal" Margin="5,10,0,0">
                                    <Button Command="{Binding Settings.TestSerialConnectionCommand}" Content="Test Connection" Margin="0,0,5,0"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                        
                        <!-- API Settings -->
                        <GroupBox Header="API Settings" Margin="0,0,0,10">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="300"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="API URL:" VerticalAlignment="Center" Margin="0,5"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Settings.ApiUrl}" Margin="5"/>
                                
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="HTTP Method:" VerticalAlignment="Center" Margin="0,5"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Settings.HttpMethods}" 
                                          SelectedItem="{Binding Settings.HttpMethod}" Margin="5"/>
                                
                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Auth Type:" VerticalAlignment="Center" Margin="0,5"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Settings.AuthTypes}" 
                                          SelectedItem="{Binding Settings.AuthType}" Margin="5"/>
                                
                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Auth Token:" VerticalAlignment="Center" Margin="0,5"/>
                                <PasswordBox Grid.Row="3" Grid.Column="1" Margin="5"/>
                                
                                <TextBlock Grid.Row="4" Grid.Column="0" Text="Timeout (ms):" VerticalAlignment="Center" Margin="0,5"/>
                                <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding Settings.TimeoutMs}" Margin="5"/>
                                
                                <StackPanel Grid.Row="5" Grid.Column="1" Orientation="Horizontal" Margin="5,10,0,0">
                                    <Button Command="{Binding Settings.TestApiConnectionCommand}" Content="Test Connection" Margin="0,0,5,0"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                        
                        <!-- Queue Settings -->
                        <GroupBox Header="Queue Settings">
                            <Grid Margin="10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Max Queue Size:" VerticalAlignment="Center" Margin="0,5"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Settings.MaxQueueSize}" Margin="5"/>
                                
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Batch Size:" VerticalAlignment="Center" Margin="0,5"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Settings.BatchSize}" Margin="5"/>
                                
                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Max Retries:" VerticalAlignment="Center" Margin="0,5"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Settings.MaxRetries}" Margin="5"/>
                                
                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Retry Delay (ms):" VerticalAlignment="Center" Margin="0,5"/>
                                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Settings.RetryDelayMs}" Margin="5"/>
                                
                                <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" Margin="5,10,0,0">
                                    <Button Command="{Binding Settings.SaveSettingsCommand}" Content="Save Settings" Margin="0,0,5,0"/>
                                    <Button Command="{Binding Settings.ResetToDefaultsCommand}" Content="Reset" Margin="0,0,5,0"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            
            <!-- Monitoring Tab -->
            <TabItem Header="Monitoring">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <TextBlock Grid.Row="0" Text="Real-time Monitoring" Style="{StaticResource SectionHeaderStyle}" Margin="0,0,0,10"/>
                    
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- API Endpoints Status -->
                        <GroupBox Grid.Column="0" Header="API Endpoints" Margin="0,0,5,0">
                            <ListView ItemsSource="{Binding ApiStatus.ApiEndpoints}">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" Width="100"/>
                                        <GridViewColumn Header="Status" Width="80">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Ellipse Style="{StaticResource StatusIndicatorStyle}"
                                                                 Fill="{Binding Status, Converter={StaticResource StatusToColorConverter}}"/>
                                                        <TextBlock Text="{Binding Status}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Calls" DisplayMemberBinding="{Binding TotalCalls}" Width="60"/>
                                        <GridViewColumn Header="Success" DisplayMemberBinding="{Binding SuccessfulCalls}" Width="60"/>
                                        <GridViewColumn Header="Last Call" DisplayMemberBinding="{Binding LastSuccessfulCall, StringFormat={}{0:HH:mm:ss}}" Width="80"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </GroupBox>
                        
                        <!-- Performance Chart Placeholder -->
                        <GroupBox Grid.Column="1" Header="Performance Chart" Margin="5,0,0,0">
                            <Grid>
                                <TextBlock Text="Performance chart would be displayed here using LiveCharts or similar charting component" 
                                           TextWrapping="Wrap" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center"
                                           Foreground="Gray"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        
        <!-- Log Viewer -->
        <Expander Grid.Row="2" Header="Application Logs" IsExpanded="True" Margin="5,0,5,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Log Controls -->
                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,5">
                    <TextBlock Text="Filter:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <ComboBox Width="80" Margin="0,0,10,0">
                        <ComboBoxItem Content="All"/>
                        <ComboBoxItem Content="INFO"/>
                        <ComboBoxItem Content="WARN"/>
                        <ComboBoxItem Content="ERROR"/>
                    </ComboBox>
                    <TextBox Width="200" PlaceholderText="Search logs..." Margin="0,0,10,0"/>
                    <Button Command="{Binding ClearLogsCommand}" Content="Clear" Margin="0,0,5,0"/>
                    <Button Command="{Binding ExportLogsCommand}" Content="Export"/>
                </StackPanel>
                
                <!-- Log List -->
                <ListView Grid.Row="1" ItemsSource="{Binding Logs}" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Time" DisplayMemberBinding="{Binding Timestamp, StringFormat={}{0:HH:mm:ss.fff}}" Width="80"/>
                            <GridViewColumn Header="Level" Width="60">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Level}" 
                                                   Foreground="{Binding Level, Converter={StaticResource LogLevelToColorConverter}}"
                                                   FontWeight="SemiBold"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Source" DisplayMemberBinding="{Binding Source}" Width="80"/>
                            <GridViewColumn Header="Message" DisplayMemberBinding="{Binding Message}" Width="400"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </Expander>
        
        <!-- Status Bar -->
        <StatusBar Grid.Row="3">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Serial:"/>
                    <Ellipse Style="{StaticResource StatusIndicatorStyle}"
                             Fill="{Binding SerialStatus.ConnectionStatus, Converter={StaticResource StatusToColorConverter}}"/>
                    <TextBlock Text="{Binding SerialStatus.PortName}" Margin="0,0,10,0"/>
                </StackPanel>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="API:"/>
                    <Ellipse Style="{StaticResource StatusIndicatorStyle}"
                             Fill="{Binding ApiStatus.OverallStatus, Converter={StaticResource StatusToColorConverter}}"/>
                    <TextBlock Text="{Binding ApiStatus.TotalCalls}" Margin="0,0,10,0"/>
                </StackPanel>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Queue:"/>
                    <TextBlock Text="{Binding QueueStatus.CurrentQueueSize}"/>
                    <TextBlock Text="/" Margin="2,0"/>
                    <TextBlock Text="{Binding QueueStatus.MaxQueueSize}" Margin="0,0,10,0"/>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding ApplicationStatus}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>