<Window x:Class="SimpleSerialToApi.Views.DataMappingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Data Mapping and API Configuration" 
        Width="1000" Height="600"
        MinHeight="500" MinWidth="800"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize">
    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    </Window.Resources>
    
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- Header -->
        <TextBlock Grid.Row="0" Text="Data Mapping Scenarios and API Configuration" 
                   FontSize="16" FontWeight="Bold" Margin="0,0,0,20"/>
        
        <!-- Control Buttons -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,15">
            <Button Content="시나리오 추가" Command="{Binding AddMappingScenarioCommand}" 
                    Margin="0,0,10,0" Padding="15,8" MinWidth="120"/>
            <Button Content="선택 삭제" Command="{Binding DeleteMappingScenarioCommand}" 
                    Margin="0,0,10,0" Padding="15,8" MinWidth="120"/>
            <Button Content="테스트" Command="{Binding TestMappingCommand}" 
                    Margin="0,0,20,0" Padding="15,8" MinWidth="120"/>
            <Button Content="저장" Command="{Binding SaveMappingCommand}" 
                    Margin="0,0,10,0" Padding="15,8" MinWidth="120" Background="LightBlue"/>
            <TextBlock Text="예약어: @yyyyMMddHHmmssfff, @yyyyMMddHHmmss, @yyyyMMdd, @deviceId" 
                       VerticalAlignment="Center" Foreground="Gray" FontSize="11" Margin="20,0,0,0"/>
        </StackPanel>
        
        <!-- Data Grid -->
        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <DataGrid Name="MappingDataGrid" 
                      ItemsSource="{Binding MappingScenarios}"
                      SelectedItem="{Binding SelectedMappingScenario}"
                      AutoGenerateColumns="False" 
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      GridLinesVisibility="All"
                      HeadersVisibility="All"
                      RowHeight="35"
                      AlternatingRowBackground="LightGray"
                      MinHeight="200"
                      MaxHeight="400">
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Header="활성화" Binding="{Binding IsEnabled}" Width="60"/>
                    <DataGridTextColumn Header="시나리오 이름" Binding="{Binding Name}" Width="120"/>
                    <DataGridComboBoxColumn Header="데이터 소스" SelectedValueBinding="{Binding Source}" 
                                            SelectedValuePath="." Width="100">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DataSources}"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DataSources}"/>
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>
                    <DataGridTextColumn Header="식별자" Binding="{Binding Identifier}" Width="100"/>
                    <DataGridTextColumn Header="전송값 템플릿" Binding="{Binding ValueTemplate}" Width="180"/>
                    <DataGridComboBoxColumn Header="전송 방식" SelectedValueBinding="{Binding TransmissionType}" 
                                            SelectedValuePath="." Width="90">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.TransmissionTypes}"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.TransmissionTypes}"/>
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>
                    <DataGridComboBoxColumn Header="API Method" SelectedValueBinding="{Binding ApiMethod}" 
                                            SelectedValuePath="." Width="80">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ApiMethods}"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ApiMethods}"/>
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>
                    <DataGridTextColumn Header="API Endpoint" Binding="{Binding ApiEndpoint}" Width="150"/>
                    <DataGridCheckBoxColumn Header="Full Path" Binding="{Binding UseFullPath}" Width="80"/>
                    <DataGridTextColumn Header="Full Path Template" Binding="{Binding FullPathTemplate}" Width="200"/>
                    <DataGridTextColumn Header="Headers" Binding="{Binding ApiHeaders}" Width="100"/>
                    <DataGridComboBoxColumn Header="Content Type" SelectedValueBinding="{Binding ContentType}" 
                                            SelectedValuePath="." Width="140">
                        <DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ContentTypes}"/>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox">
                                <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ContentTypes}"/>
                            </Style>
                        </DataGridComboBoxColumn.EditingElementStyle>
                    </DataGridComboBoxColumn>
                    <DataGridTextColumn Header="Auth Token" Binding="{Binding AuthToken}" Width="100"/>
                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>
        
        <!-- Footer Buttons -->
        <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,15,0,0">
            <Button Content="예약어 목록" Command="{Binding ShowReservedWordsCommand}" 
                    Margin="0,0,10,0" Padding="15,8" MinWidth="100" Background="LightYellow"/>
            <Button Content="확인" IsDefault="True" Command="{Binding ApplyCommand}" 
                    Margin="0,0,10,0" Padding="20,8" MinWidth="80" Background="LightGreen"/>
            <Button Content="닫기" IsCancel="True" Command="{Binding CancelCommand}" 
                    Padding="20,8" MinWidth="80"/>
        </StackPanel>
        
    </Grid>
</Window>
